version: '2.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "2181"]
      interval: 10s
      timeout: 120s
      retries: 5
    environment:
        ZOO_PORT: 2181
        ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 10
        ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 2
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "9092"]
      interval: 10s
      timeout: 120s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
        KAFKA_ADVERTISED_PORT: 9092
        KAFKA_ADVERTISED_HOST_NAME: kafka
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  mysql:
    image: mysql:5.7.19
    container_name: sp-rdbms
    ports:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql/scripts:/docker-entrypoint-initdb.d
    command: --max-connections=10000
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-proot"]
      interval: 30s
      timeout: 60s
      retries: 5
    depends_on:
      kafka:
        condition: service_healthy
  manager1:
    image: docker.wso2.com/wso2sp-manager:4.2.0
    container_name: wso2sp-manager-1
    ports:
      - "9543:9543"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "9543"]
      interval: 10s
      timeout: 120s
      retries: 5
    volumes:
      - ./manager:/home/wso2carbon/wso2-server-volume/conf/manager
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      NODE_ID: wso2sp-manager-1
      NODE_IP: 0.0.0.0
    links:
      - mysql
  manager2:
    image: docker.wso2.com/wso2sp-manager:4.2.0
    container_name: wso2sp-manager-2
    ports:
      - "9544:9543"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "9543"]
      interval: 10s
      timeout: 120s
      retries: 5
    volumes:
      - ./manager:/home/wso2carbon/wso2-server-volume/conf/manager
    depends_on:
      manager1:
        condition: service_healthy
    environment:
          NODE_ID: wso2sp-manager-2
          NODE_IP: 0.0.0.0
    links:
      - manager1
  worker1:
    image: docker.wso2.com/wso2sp-worker:4.2.0
    container_name: wso2sp-worker-1
    ports:
      - "9001:9443"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "9443"]
      interval: 10s
      timeout: 120s
      retries: 5
    volumes:
       - ./worker:/home/wso2carbon/wso2-server-volume/conf/worker
    depends_on:
      manager1:
        condition: service_healthy
    environment:
      NODE_ID: wso2sp-worker-1
      NODE_IP: 0.0.0.0
    links:
      - manager1
  worker2:
    image: docker.wso2.com/wso2sp-worker:4.2.0
    container_name: wso2sp-worker-2
    ports:
      - "9002:9443"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "9443"]
      interval: 10s
      timeout: 120s
      retries: 5
    volumes:
       - ./worker:/home/wso2carbon/wso2-server-volume/conf/worker
    depends_on:
      manager1:
        condition: service_healthy
    environment:
      NODE_ID: wso2sp-worker-2
      NODE_IP: 0.0.0.0
    links:
      - manager1
  worker3:
    image: docker.wso2.com/wso2sp-worker:4.2.0
    container_name: wso2sp-worker-3
    ports:
      - "9003:9443"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "9443"]
      interval: 10s
      timeout: 120s
      retries: 5
    volumes:
       - ./worker:/home/wso2carbon/wso2-server-volume/conf/worker
    depends_on:
      manager1:
        condition: service_healthy
    environment:
      NODE_ID: wso2sp-worker-3
      NODE_IP: 0.0.0.0
    links:
      - manager1
  worker4:
    image: docker.wso2.com/wso2sp-worker:4.2.0
    container_name: wso2sp-worker-4
    ports:
      - "9004:9443"
    healthcheck:
      test: ["CMD", "nc", "-z","localhost", "9443"]
      interval: 10s
      timeout: 120s
      retries: 5
    volumes:
       - ./worker:/home/wso2carbon/wso2-server-volume/conf/worker
    depends_on:
      manager1:
        condition: service_healthy
    environment:
      NODE_ID: wso2sp-worker-4
      NODE_IP: 0.0.0.0
    links:
      - manager1
